import express from "express";
import History from "../models/history.js";

const router = express.Router();

/* üìå L·∫•y to√†n b·ªô l·ªãch s·ª≠ m∆∞·ª£n tr·∫£ (cho admin) */
router.get("/", async (req, res) => {
  try {
    const histories = await History.find().sort({ borrowDate: -1 });
    res.json(histories);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y l·ªãch s·ª≠:", err);
    res.status(500).json({ message: "L·ªói server khi l·∫•y l·ªãch s·ª≠ m∆∞·ª£n tr·∫£" });
  }
});

/* üìå L·∫•y l·ªãch s·ª≠ theo userId (cho ng∆∞·ªùi d√πng) */
router.get("/user/:userId", async (req, res) => {
  try {
    const { userId } = req.params;
    const histories = await History.find({ userId }).sort({ borrowDate: -1 });
    res.json(histories);
  } catch (err) {
    console.error("‚ùå L·ªói l·∫•y l·ªãch s·ª≠ user:", err);
    res.status(500).json({ message: "L·ªói server khi l·∫•y l·ªãch s·ª≠ ng∆∞·ªùi d√πng" });
  }
});

/* üìå Th√™m l·ªãch s·ª≠ m∆∞·ª£n (khi ng∆∞·ªùi d√πng m∆∞·ª£n s√°ch) */
router.post("/", async (req, res) => {
  try {
    // In ra ƒë·ªÉ ki·ªÉm tra d·ªØ li·ªáu frontend g·ª≠i v·ªÅ
    console.log("üì¶ D·ªØ li·ªáu nh·∫≠n t·ª´ frontend:", req.body);

    const {
      userId,
      fullName,
      studentId,
      email,
      bookId,
      bookTitle,
      quantity,
      borrowDate,
      returnDate,
      status,
    } = req.body;

    // Ki·ªÉm tra b·∫Øt bu·ªôc
    if (!bookId || !bookTitle) {
      return res.status(400).json({ message: "Thi·∫øu th√¥ng tin s√°ch!" });
    }

    const newHistory = new History({
      userId: req.body.userId || req.user?._id || "unknown_user",
      fullName: req.body.fullName,
      studentId: req.body.studentId,
      email: req.body.email,
      bookId: req.body.bookId,
      bookTitle: req.body.bookTitle,
      quantity: req.body.quantity,
      borrowDate: new Date(),
      returnDate: null,
      status: "ƒêang m∆∞·ª£n",
    });
    

    const saved = await newHistory.save();
    console.log("‚úÖ L∆∞u th√†nh c√¥ng:", saved);
    res.status(201).json(saved);
  } catch (err) {
    console.error("‚ùå L·ªói th√™m l·ªãch s·ª≠:", err);
    res.status(500).json({
      message: "Kh√¥ng th·ªÉ l∆∞u l·ªãch s·ª≠ m∆∞·ª£n",
      error: err.message,
    });
  }
});

/* üìå C·∫≠p nh·∫≠t tr·∫°ng th√°i (tr·∫£ s√°ch) */
// C·∫≠p nh·∫≠t ng√†y tr·∫£ v√† tr·∫°ng th√°i
router.put("/:id/return", async (req, res) => {
  try {
    const updated = await History.findByIdAndUpdate(
      req.params.id,
      { 
        returnDate: new Date(),
        status: "ƒê√£ tr·∫£",
      },
      { new: true }
    );
    res.json(updated);
  } catch (err) {
    res.status(500).json({ message: "L·ªói c·∫≠p nh·∫≠t l·ªãch s·ª≠", error: err });
  }
});


export default router;

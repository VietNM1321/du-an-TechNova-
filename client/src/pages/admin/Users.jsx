import { useEffect, useState } from "react";
import axios from "axios";

const Users = () => {
  const [users, setUsers] = useState([]); // danh s√°ch ng∆∞·ªùi d√πng
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState("");

  // üîπ L·∫•y danh s√°ch ng∆∞·ªùi d√πng
  const fetchUsers = async () => {
    try {
      setLoading(true);
      const res = await axios.get("http://localhost:5000/api/users");

      // ƒê·∫£m b·∫£o d·ªØ li·ªáu l√† m·∫£ng
      const data = Array.isArray(res.data)
        ? res.data
        : Array.isArray(res.data.users)
        ? res.data.users
        : [];

      setUsers(data);
    } catch (err) {
      console.error("L·ªói khi fetch users:", err);
      setError("Kh√¥ng th·ªÉ l·∫•y danh s√°ch ng∆∞·ªùi d√πng");
    } finally {
      setLoading(false);
    }
  };

  // üîπ Thay ƒë·ªïi tr·∫°ng th√°i ho·∫°t ƒë·ªông
  const toggleActive = async (id) => {
    try {
      await axios.put(`http://localhost:5000/api/users/${id}/toggle-active`);
      fetchUsers();
    } catch (err) {
      console.error("L·ªói khi thay ƒë·ªïi tr·∫°ng th√°i:", err);
      alert("Kh√¥ng th·ªÉ thay ƒë·ªïi tr·∫°ng th√°i ng∆∞·ªùi d√πng");
    }
  };

  // üîπ X√≥a tr·∫°ng th√°i ‚Äúqu√™n m·∫≠t kh·∫©u‚Äù
  const clearForgotStatus = async (id) => {
    try {
      await axios.put(`http://localhost:5000/api/users/${id}/clear-forgot`);
      fetchUsers();
    } catch (err) {
      console.error("L·ªói khi x√≥a tr·∫°ng th√°i qu√™n m·∫≠t kh·∫©u:", err);
      alert("Kh√¥ng th·ªÉ x√≥a tr·∫°ng th√°i");
    }
  };

  useEffect(() => {
    fetchUsers();
  }, []);

  if (loading) return <p className="p-4">ƒêang t·∫£i d·ªØ li·ªáu...</p>;
  if (error) return <p className="p-4 text-red-600">{error}</p>;

  return (
    <div className="p-4">
      <h2 className="text-xl font-bold mb-3 text-green-700">
        Qu·∫£n l√Ω ng∆∞·ªùi d√πng
      </h2>
      <table className="w-full border-collapse border border-gray-300 rounded-lg">
        <thead className="bg-green-100">
          <tr>
            <th className="border p-2">M√£ SV</th>
            <th className="border p-2">Email</th>
            <th className="border p-2">M·∫≠t kh·∫©u</th>
            <th className="border p-2">Tr·∫°ng th√°i</th>
            <th className="border p-2">Qu√™n m·∫≠t kh·∫©u</th>
            <th className="border p-2">H√†nh ƒë·ªông</th>
          </tr>
        </thead>
        <tbody>
          {users.length === 0 ? (
            <tr>
              <td colSpan="6" className="text-center p-4">
                Kh√¥ng c√≥ ng∆∞·ªùi d√πng
              </td>
            </tr>
          ) : (
            users.map((u) => (
              <tr key={u._id} className="text-center hover:bg-gray-50">
                <td className="border p-2">{u.studentCode || "‚Äî"}</td>
                <td className="border p-2">{u.email}</td>
                <td className="border p-2">
                  {u.password ? (
                    <span className="text-green-600">ƒê√£ c·∫•p</span>
                  ) : (
                    <span className="text-gray-500">Ch∆∞a c·∫•p</span>
                  )}
                </td>
                <td className="border p-2">
                  {u.active ? (
                    <span className="text-green-600 font-medium">Ho·∫°t ƒë·ªông</span>
                  ) : (
                    <span className="text-red-600 font-medium">B·ªã kh√≥a</span>
                  )}
                </td>

                {/* ‚úÖ Tr·∫°ng th√°i qu√™n m·∫≠t kh·∫©u */}
                <td className="border p-2">
                  {u.forgotPassword ? (
                    <div className="flex flex-col items-center gap-1">
                      <span className="text-yellow-600 font-medium">
                        ƒê√£ y√™u c·∫ßu
                      </span>
                      <button
                        onClick={() => clearForgotStatus(u._id)}
                        className="text-xs text-blue-600 hover:underline"
                      >
                        X√≥a tr·∫°ng th√°i
                      </button>
                    </div>
                  ) : (
                    <span className="text-gray-500">Ch∆∞a y√™u c·∫ßu</span>
                  )}
                </td>

                {/* ‚úÖ N√∫t kh√≥a / m·ªü kh√≥a */}
                <td className="border p-2">
                  <button
                    onClick={() => toggleActive(u._id)}
                    className={`px-3 py-1 rounded text-white ${
                      u.active
                        ? "bg-red-500 hover:bg-red-600"
                        : "bg-green-500 hover:bg-green-600"
                    }`}
                  >
                    {u.active ? "Kh√≥a" : "M·ªü kh√≥a"}
                  </button>
                </td>
              </tr>
            ))
          )}
        </tbody>
      </table>
    </div>
  );
};

export default Users;
